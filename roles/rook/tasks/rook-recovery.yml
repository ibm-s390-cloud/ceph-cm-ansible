---
- name: Launch instance
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    key_name: "{{ keypair }}"
    group: "{{ security_group }}"
    instance_type: "{{ controller_instance_type }}"
    image: "{{ image }}"
    wait: true
    region: "{{ region }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    assign_public_ip: yes
    instance_tags: "{{ aws_tags }}"
    wait: yes
  register: ec2_instances

- name: print ec2 facts
  debug:
    var: ec2_instances

- name: Set name tag for AWS instance
  ec2_tag:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    resource: "{{ item.1.id }}"
    tags:
      Name: "{{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"
  with_indexed_items: "{{ ec2_instances.instances }}"
  loop_control:
    label: "{{ item.1.id }} - {{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"

- name: Wait for SSH to come up
  wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
  with_items: '{{ ec2_instances.instances }}'
  loop_control:
    label: "{{ item.id }} - {{ item.public_ip }}"

- name: Remove jenkins docker old container
  command: ssh -i "{{ rook_key }}" ubuntu@"{{ item.public_ip }}" sudo docker rm jenkins
  with_items: '{{ ec2_instances.instances }}'
  loop_control:
    label: "{{ item.id }} - {{ item.public_ip }}"

- name: Start jenkins container
  command: ssh -i "{{ rook_key }}" ubuntu@"{{ item.public_ip }}" sudo docker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v /mnt/jenkins/jenkins:/var/jenkins_home "{{ jenkins_controller_image }}"
  with_items: '{{ ec2_instances.instances }}'
  loop_control:
    label: "{{ item.id }} - {{ item.public_ip }}"

- name: The instance was succssfuly started
  debug:
    msg:
    - "The Rook Jenkins is up and running the instance is named: {{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"
    - "In order to make him avalible to public network you will need to add him to the load balancing target group"
  with_indexed_items: "{{ ec2_instances.instances }}"
  loop_control:
    label: "{{ item.1.id }} - {{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"
