---
- name: Set ISO name
  set_fact:
      iso_name: "{{ distro.iso.split('/')[-1] }}"

- name: Set ISO path
  set_fact:
      iso_path: "{{ iso_dir }}/{{ iso_name }}"

- import_tasks: download_iso.yml
  when: distro.iso != ''

# we do this so that if the playbook fails
# after mounting and we need to run it again
# then we'll remount and complete the rest
# of the tasks like it's the first run
- name: Clear the mount point.
  mount:
    name: "{{ iso_mount }}"
    src: "{{ iso_path }}"
    fstype: "iso9660"
    state: unmounted

- name: Mount ISO
  mount:
    name: "{{ iso_mount }}"
    src: "{{ iso_path }}"
    opts: "loop"
    fstype: "iso9660"
    state: mounted
  when: download is changed or (iso_stat.stat is defined and iso_stat.stat.exists and
        profile is defined and profile.stdout == '')
  register: mount

- name: Set arch
  set_fact:
      arch: "{{ distro.arch|default('x86_64') }}"
  when: mount is defined and mount is changed

- name: Import the distro (also creates the profile)
  command: cobbler import --path={{ iso_mount }} --name={{ distro_name }} --arch={{ arch }}
  register: imported
  when: mount is defined and mount is changed

# In the next two step we need to
# rename the distro and profile only when the arch is arm
# because cobbler is adding the arm word twice to the name instead of once
- name: Rename the distro if the arch is arm
  command: cobbler distro rename --name={{ distro_name }}-arm --newname={{ distro_name }}
  when: mount is defined and mount is changed and
        arch == "arm"

- name: Rename the profile if the arch is arm
  command: cobbler profile rename --name={{ distro_name }}-arm --newname={{ distro_name }}
  when: mount is defined and mount is changed and
        arch == "arm"

- name: Unmount ISO
  mount:
    name: "{{ iso_mount }}"
    src: "{{ iso_path }}"
    fstype: "iso9660"
    state: unmounted
  when: mount is defined and mount is changed
